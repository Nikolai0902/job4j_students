
package ru.rest.soap.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;

import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.2
 * Generated source version: 3.0
 */
@WebServiceClient(name = "StudentsServiceService", targetNamespace = "http://service.serv_s.ru/", wsdlLocation = "http://localhost:9900/students/service?wsdl")
public class StudentsService extends Service {

    private static final URL STUDENTSSERVICESERVICE_WSDL_LOCATION;
    private static final WebServiceException STUDENTSSERVICESERVICE_EXCEPTION;
    private static final QName STUDENTSSERVICESERVICE_QNAME = new QName("http://service.serv_s.ru/", "StudentsServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:9900/students/service?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        STUDENTSSERVICESERVICE_WSDL_LOCATION = url;
        STUDENTSSERVICESERVICE_EXCEPTION = e;
    }

    public StudentsService() {
        super(getWsdlLocation(), STUDENTSSERVICESERVICE_QNAME);
    }

    public StudentsService(WebServiceFeature... features) {
        super(getWsdlLocation(), STUDENTSSERVICESERVICE_QNAME, features);
    }

    public StudentsService(URL wsdlLocation) {
        super(wsdlLocation, STUDENTSSERVICESERVICE_QNAME);
    }

    public StudentsService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, STUDENTSSERVICESERVICE_QNAME, features);
    }

    public StudentsService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public StudentsService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns SoapService
     */
    @WebEndpoint(name = "StudentsServicePort")
    public SoapService getStudentsServicePort() {
        return super.getPort(new QName("http://service.serv_s.ru/", "StudentsServicePort"), SoapService.class);
    }

    /**
     * @param features A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns SoapService
     */
    @WebEndpoint(name = "StudentsServicePort")
    public SoapService getStudentsServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://service.serv_s.ru/", "StudentsServicePort"), SoapService.class, features);
    }

    private static URL getWsdlLocation() {
        if (STUDENTSSERVICESERVICE_EXCEPTION != null) {
            throw STUDENTSSERVICESERVICE_EXCEPTION;
        }
        return STUDENTSSERVICESERVICE_WSDL_LOCATION;
    }

}
